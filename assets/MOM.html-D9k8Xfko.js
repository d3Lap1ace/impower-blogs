import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,a as n}from"./app-D5V__clA.js";const e={},t=n(`<h1 id="消息中间件" tabindex="-1"><a class="header-anchor" href="#消息中间件"><span>消息中间件</span></a></h1><p>消息队列(message queue)简称MQ，是一种以“<strong>先进先出</strong>”的数据结构为基础的消息服务器。<br> 消息：在两个系统要传输的数据<br> 作用：实现消息的传递</p><p>原始的数据传递方式<br><img src="https://cdn.nlark.com/yuque/0/2024/png/43928099/1719648641001-ff5469ce-b24d-46e7-b2d3-5583dfa456f0.png#averageHue=%23f6f6f5&amp;clientId=ueb21480b-fd9b-4&amp;from=paste&amp;height=95&amp;id=u98fa11d4&amp;originHeight=95&amp;originWidth=1124&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=9595&amp;status=done&amp;style=none&amp;taskId=u38247954-ca1c-4761-9bbd-bad755569ca&amp;title=&amp;width=1124" alt="image.png" loading="lazy"><br> 为同步传输存在的弊端：<strong>传输效率较低</strong>。</p><p>基于MQ实现消息的传输<br><img src="https://cdn.nlark.com/yuque/0/2024/png/43928099/1719648649126-302b19ec-0a1d-4161-87a2-f8c71e44088d.png#averageHue=%23faf6f0&amp;clientId=ueb21480b-fd9b-4&amp;from=paste&amp;height=139&amp;id=ua8e3f910&amp;originHeight=139&amp;originWidth=1248&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=60781&amp;status=done&amp;style=none&amp;taskId=ude9c6aee-a9a4-4401-8f73-74f3c103fba&amp;title=&amp;width=1248" alt="image.png" loading="lazy"><br> 属于异步传输 数据传输的消息较高。</p><h2 id="消息中间件的主要的作用" tabindex="-1"><a class="header-anchor" href="#消息中间件的主要的作用"><span>消息中间件的主要的作用</span></a></h2><p><strong>[1]系统解耦</strong><br><strong>[2]流量消锋</strong><br><strong>[3]数据分发</strong></p><h2 id="mq的优缺点" tabindex="-1"><a class="header-anchor" href="#mq的优缺点"><span>MQ的优缺点</span></a></h2><p>优点：<br> 1、应用解耦提高了系统的容错性<br> 2、异步通讯提高了系统的响应速度<br> 3、流量消锋提高了系统的并发能力<br> 缺点：<br> 1、系统可用性降低：系统引入的外部依赖越多，系统稳定性越差。一旦MQ宕机，就会对业务造成影响。<br> 2、系统复杂度提高：MQ的加入大大增加了系统的复杂度。<br> MQ的选择依据是什么? 调用方是否需要获取到被调用方的执行结果，如果需要获取到结果，那么就需要使用同步通讯，如果不需要就可以使用异步通讯。</p><h1 id="rabbitmq架构" tabindex="-1"><a class="header-anchor" href="#rabbitmq架构"><span>Rabbitmq架构</span></a></h1><p><img src="https://cdn.nlark.com/yuque/0/2024/png/43928099/1719648667712-1a4a7549-f642-4a41-b280-ee62c396dec6.png#averageHue=%23b8b854&amp;clientId=ueb21480b-fd9b-4&amp;from=paste&amp;height=404&amp;id=u00deea60&amp;originHeight=404&amp;originWidth=1273&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=142007&amp;status=done&amp;style=none&amp;taskId=u118cf3d5-50f7-4702-9f68-9c931e8e1c3&amp;title=&amp;width=1273" alt="image.png" loading="lazy"><br><strong>Broker</strong>：接收和分发消息的应用，RabbitMQ Server就是 Message Broker<br><strong>Virtual host</strong>:出于多租户和安全因素设计的，把 AMQP 的基本组件划分到一个虚拟的分组中，类似于网络中的 namespace 概念。当多个不同的用户使用同一个<br> RabbitMQ server 提供的服务时，可以划分出多个vhost，每个用户在自己的 vhost 创建 exchange／queue 等<br><strong>Connection</strong>：publisher／consumer 和 broker 之间的 TCP 连接<br><strong>Channel</strong>：如果每一次访问 RabbitMQ 都建立一个 Connection，在消息量大的时候建立 TCP Connection的开销将是巨大的，效率也较低。Channel 是在 connection<br> 内部建立的逻辑连接，如果应用程序支持多线程，通常每个thread创建单独的 channel 进行通讯，AMQP method 包含了channel id 帮助客户端和message broker<br> 识别 channel，所以 channel 之间是完全隔离的。Channel 作为轻量级的 Connection 极大减少了操作系统建立 TCP connection 的开销<br><strong>Exchange</strong>：message 到达 broker 的第一站，根据分发规则，匹配查询表中的 routing key，分发消息到queue 中去。常用的类型有：direct (point-to-point)，<br> topic (publish-subscribe) and fanout (multicast)<br><strong>Queue</strong>：存储消息的容器，消息最终被送到这里，等待 consumer 取走<br><strong>Binding</strong>：exchange 和 queue 之间的虚拟连接，binding 中可以包含 routing key。Binding 信息被保存到 exchange 中的查询表中，用于 message 的分发依据</p><h1 id="rabbitmq环境搭建" tabindex="-1"><a class="header-anchor" href="#rabbitmq环境搭建"><span>Rabbitmq环境搭建</span></a></h1><ol><li>docker部署</li></ol><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 拉取rabbitmq的镜像</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> rabbitmq:3.8-management</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 创建容器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> rabbit01</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> RABBITMQ_DEFAULT_USER=admin</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">-e </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">RABBITMQ_DEFAULT_PASS=admin</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">-p </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">15672:15672</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 5672:5672</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">--hostname </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">rabbit01</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --restart=always</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">-v </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">rabbit01_data:/var/lib/rabbitmq</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">-v </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">rabbit01_conf:/etc/rabbitmq</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">rabbitmq:3.8-management</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>依赖导入</li></ol><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">parent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;spring-boot-starter-parent&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;3.2.0&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">parent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">    &lt;!-- spring boot和rabbitmq整合的时候所需要的起步依赖 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;spring-boot-starter-amqp&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">    &lt;!-- spring boot和junit整合的起步依赖 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;spring-boot-starter-test&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">   &lt;!-- 类似于指定父工程 上述继承了父工程之后，这里就可以不用这个dependencyManagement这一项了,这两项选择一项即可。--&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">dependencyManagement</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">            &lt;!-- Spring Boot Dependencies --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;spring-boot-dependencies&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;3.2.0&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;pom&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">scope</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;import&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">scope</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">dependencyManagement</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>application.yml</li></ol><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">spring</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  rabbitmq</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    host</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">192.168.1.1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    port</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">5672</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    username</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">admin</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    password</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">admin</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    virtual-host</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="rabbitmq消息模型" tabindex="-1"><a class="header-anchor" href="#rabbitmq消息模型"><span>Rabbitmq消息模型</span></a></h1><h2 id="简单队列模型" tabindex="-1"><a class="header-anchor" href="#简单队列模型"><span>简单队列模型</span></a></h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/43928099/1719648679807-f573fc8d-5c4a-4bdc-a252-9a6f133cb1eb.png#averageHue=%23fdf8f7&amp;clientId=ueb21480b-fd9b-4&amp;from=paste&amp;height=183&amp;id=u51212e29&amp;originHeight=183&amp;originWidth=1109&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=22172&amp;status=done&amp;style=none&amp;taskId=u0a5760b5-0046-441b-97e2-c5cb9af7572&amp;title=&amp;width=1109" alt="image.png" loading="lazy"><br> 一个生产者对应一个消费者，这一个消费者从这个队列中消费所有的消息。</p><p>生产者</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">SpringBootApplication</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> ProducerApplication</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">        SpringApplication</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">ProducerApplication</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> , args) ;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试类</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">SpringBootTest</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">classes</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> ProducerApplication</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> Producer01</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">Autowired</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> RabbitTemplate</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> rabbitTemplate </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> test01</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">        rabbitTemplate</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">convertAndSend</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;simple_queue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> , </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;hello rabbitmq...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);		</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 第一个参数表示的就是队列名称</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>消费者</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">SpringBootApplication</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> ConsumerApplication</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">        SpringApplication</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">ConsumerApplication</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> , args) ;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>监听方法</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">Component</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> Consumer01Listener</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">RabbitListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">queues</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;simple_queue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> consumer01</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">Message</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> message</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        byte</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[] </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">body</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> message</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">getBody</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">        String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(body);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">        System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;msg ----&gt; &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> msg);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="工作队列模型" tabindex="-1"><a class="header-anchor" href="#工作队列模型"><span>工作队列模型</span></a></h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/43928099/1719648621992-8818ebe5-c386-48a1-bcba-bcbe5339f3f7.png#averageHue=%23fdf6f5&amp;clientId=ueb21480b-fd9b-4&amp;from=paste&amp;height=387&amp;id=udd89cf8c&amp;originHeight=387&amp;originWidth=1310&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=79559&amp;status=done&amp;style=none&amp;taskId=ubdbc8560-6297-4a0e-8e93-e8b7846d8aa&amp;title=&amp;width=1310" alt="image.png" loading="lazy"><br> Work Queues与入门程序的简单模式相比，多了一个或一些消费端，<strong>多个消费者共同消费同一个队列</strong>中的消息。<br><strong>应用场景</strong>：对于任务过重或任务较多情况使用工作队列可以<strong>提高任务处理的速度</strong>。</p><h2 id="发布订阅模型" tabindex="-1"><a class="header-anchor" href="#发布订阅模型"><span>发布订阅模型</span></a></h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/43928099/1719648629759-2a48f174-1d30-4b9a-8f15-bf784f19820b.png#averageHue=%23f8d8d8&amp;clientId=ueb21480b-fd9b-4&amp;from=paste&amp;height=208&amp;id=u2afec4b2&amp;originHeight=208&amp;originWidth=1334&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=48529&amp;status=done&amp;style=none&amp;taskId=u024538e9-d6dc-49b2-9018-23392cb6142&amp;title=&amp;width=1334" alt="image.png" loading="lazy"><br> 消息的传输过程如下所示：<br> 1、生产者发送消息给交换机<br> 2、交换机获取到消息将消息转发给指定的队列<br> 3、消费者监听指定的队列，一旦队列中存在消息，消费者监听方法执行<br> 交换机接收到消息以后到底需要将消息转发给哪一个队列，取决于交换机的类型，常见的交换机的类型：<br> 1、<strong>Fanout</strong>：广播，将将消息交给所有与之绑定队列<br> 2、<strong>Direct</strong>：路由，把消息交给符合指定routing key 的队列<br> 3、<strong>Topic</strong>：主题，把消息交给符合routing pattern（路由规则） 的队列<br><strong>Exchange（交换机）只负责转发消息，不具备存储消息的能力</strong>，因此如果没有任何队列与Exchange绑定，或者没有符合路由规则的队列，那么消息会丢失！</p><h3 id="fanout" tabindex="-1"><a class="header-anchor" href="#fanout"><span>Fanout</span></a></h3><p>简介：fanout类型的交换机会将将消息交给所有与之绑定队列<br><img src="https://cdn.nlark.com/yuque/0/2024/png/43928099/1719648761902-def890d3-37ab-43c0-8246-a2f9bceaa355.png#averageHue=%23f8d7d7&amp;clientId=ueb21480b-fd9b-4&amp;from=paste&amp;height=208&amp;id=u4a91e509&amp;originHeight=208&amp;originWidth=1322&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=53141&amp;status=done&amp;style=none&amp;taskId=ucaf16f2b-2be9-4a81-9364-a5946858ce0&amp;title=&amp;width=1322" alt="image.png" loading="lazy"></p><h3 id="direct" tabindex="-1"><a class="header-anchor" href="#direct"><span>Direct</span></a></h3><p>路由模式特点：<br> 1、队列与交换机的绑定的时候需要指定一个或者多个bindingKey(routingKey)<br> 2、生产者发送消息的时候需要指定一个消息的routingKey<br> 3、交换机获取到消息以后需要使用消息的routingKey和bindingKey比对，如果相等就会把消息转发给对应的队列<br><img src="https://cdn.nlark.com/yuque/0/2024/png/43928099/1719648789423-15813bc6-4952-45f5-9fbf-a318ef002bfa.png#averageHue=%23f7eeee&amp;clientId=ueb21480b-fd9b-4&amp;from=paste&amp;height=629&amp;id=u954919ec&amp;originHeight=629&amp;originWidth=1468&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=192263&amp;status=done&amp;style=none&amp;taskId=u6dcbef30-f176-4f7d-a551-4e36d78be86&amp;title=&amp;width=1468" alt="image.png" loading="lazy"></p><h3 id="topic" tabindex="-1"><a class="header-anchor" href="#topic"><span>Topic</span></a></h3><p>主题模式特点：<br> 1、队列与交换机的绑定的时候需要指定一个或者多个bindingKey(routingKey) ， <strong>在bindingKey可以使用通配符</strong><br> 2、生产者发送消息的时候需要指定一个消息的routingKey<br> 3、交换机获取到消息以后需要使用消息的routingKey和bindingKey规则进行比对，如果routingKey满足bindingKey的规则就会把消息转发给对应的队列<br> 通配符介绍：<br><strong>#</strong>：匹配零个或多个词<br> *<strong><strong>：匹配不多不少</strong>恰好1</strong>个词</p><figure><img src="https://cdn.nlark.com/yuque/0/2024/png/43928099/1719648811515-6abc7ba2-972a-4233-82ed-d19e798b22b0.png#averageHue=%23f7eeee&amp;clientId=ueb21480b-fd9b-4&amp;from=paste&amp;height=550&amp;id=u8e584576&amp;originHeight=550&amp;originWidth=1389&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=161651&amp;status=done&amp;style=none&amp;taskId=ue088edf9-3b99-4bec-920b-996bf801400&amp;title=&amp;width=1389" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h1 id="rabbitlistener注解" tabindex="-1"><a class="header-anchor" href="#rabbitlistener注解"><span>@RabbitListener注解</span></a></h1><p>RabbitListener注解用来声明消费者监听器，可以监听指定的队列，同时也可以声明队列、交换机、队列和交换机绑定信息。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">Component</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> Consumer02Listener</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">RabbitListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">bindings</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> @</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">QueueBinding</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">            value</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> @</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">Queue</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;direct_queue_02&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> ,</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> durable</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;true&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">) </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">            exchange</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> @</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">Exchange</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;direct_exchange&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> ,</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> durable</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;true&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> ,</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> type</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> ExchangeTypes</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">DIRECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">) </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">            key</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> { </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> ,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;info&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    ))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> consumer01</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">Message</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> message</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        byte</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[] </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">body</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> message</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">getBody</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">        String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(body);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">        System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;consumer02Listener....msg ----&gt; &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> msg);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,42),l=[t];function h(p,k){return a(),s("div",null,l)}const g=i(e,[["render",h],["__file","MOM.html.vue"]]),c=JSON.parse('{"path":"/backend/MOM.html","title":"消息中间件","lang":"zh-CN","frontmatter":{"description":"消息中间件 消息队列(message queue)简称MQ，是一种以“先进先出”的数据结构为基础的消息服务器。 消息：在两个系统要传输的数据 作用：实现消息的传递 原始的数据传递方式 image.png 为同步传输存在的弊端：传输效率较低。 基于MQ实现消息的传输 image.png 属于异步传输 数据传输的消息较高。 消息中间件的主要的作用 [1]系...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/impower-blogs/backend/MOM.html"}],["meta",{"property":"og:site_name","content":"impower"}],["meta",{"property":"og:title","content":"消息中间件"}],["meta",{"property":"og:description","content":"消息中间件 消息队列(message queue)简称MQ，是一种以“先进先出”的数据结构为基础的消息服务器。 消息：在两个系统要传输的数据 作用：实现消息的传递 原始的数据传递方式 image.png 为同步传输存在的弊端：传输效率较低。 基于MQ实现消息的传输 image.png 属于异步传输 数据传输的消息较高。 消息中间件的主要的作用 [1]系..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.nlark.com/yuque/0/2024/png/43928099/1719648641001-ff5469ce-b24d-46e7-b2d3-5583dfa456f0.png#averageHue=%23f6f6f5&clientId=ueb21480b-fd9b-4&from=paste&height=95&id=u98fa11d4&originHeight=95&originWidth=1124&originalType=binary&ratio=1&rotation=0&showTitle=false&size=9595&status=done&style=none&taskId=u38247954-ca1c-4761-9bbd-bad755569ca&title=&width=1124"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-14T12:35:41.000Z"}],["meta",{"property":"article:author","content":"luke.lewis"}],["meta",{"property":"article:modified_time","content":"2024-07-14T12:35:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"消息中间件\\",\\"image\\":[\\"https://cdn.nlark.com/yuque/0/2024/png/43928099/1719648641001-ff5469ce-b24d-46e7-b2d3-5583dfa456f0.png#averageHue=%23f6f6f5&clientId=ueb21480b-fd9b-4&from=paste&height=95&id=u98fa11d4&originHeight=95&originWidth=1124&originalType=binary&ratio=1&rotation=0&showTitle=false&size=9595&status=done&style=none&taskId=u38247954-ca1c-4761-9bbd-bad755569ca&title=&width=1124\\",\\"https://cdn.nlark.com/yuque/0/2024/png/43928099/1719648649126-302b19ec-0a1d-4161-87a2-f8c71e44088d.png#averageHue=%23faf6f0&clientId=ueb21480b-fd9b-4&from=paste&height=139&id=ua8e3f910&originHeight=139&originWidth=1248&originalType=binary&ratio=1&rotation=0&showTitle=false&size=60781&status=done&style=none&taskId=ude9c6aee-a9a4-4401-8f73-74f3c103fba&title=&width=1248\\",\\"https://cdn.nlark.com/yuque/0/2024/png/43928099/1719648667712-1a4a7549-f642-4a41-b280-ee62c396dec6.png#averageHue=%23b8b854&clientId=ueb21480b-fd9b-4&from=paste&height=404&id=u00deea60&originHeight=404&originWidth=1273&originalType=binary&ratio=1&rotation=0&showTitle=false&size=142007&status=done&style=none&taskId=u118cf3d5-50f7-4702-9f68-9c931e8e1c3&title=&width=1273\\",\\"https://cdn.nlark.com/yuque/0/2024/png/43928099/1719648679807-f573fc8d-5c4a-4bdc-a252-9a6f133cb1eb.png#averageHue=%23fdf8f7&clientId=ueb21480b-fd9b-4&from=paste&height=183&id=u51212e29&originHeight=183&originWidth=1109&originalType=binary&ratio=1&rotation=0&showTitle=false&size=22172&status=done&style=none&taskId=u0a5760b5-0046-441b-97e2-c5cb9af7572&title=&width=1109\\",\\"https://cdn.nlark.com/yuque/0/2024/png/43928099/1719648621992-8818ebe5-c386-48a1-bcba-bcbe5339f3f7.png#averageHue=%23fdf6f5&clientId=ueb21480b-fd9b-4&from=paste&height=387&id=udd89cf8c&originHeight=387&originWidth=1310&originalType=binary&ratio=1&rotation=0&showTitle=false&size=79559&status=done&style=none&taskId=ubdbc8560-6297-4a0e-8e93-e8b7846d8aa&title=&width=1310\\",\\"https://cdn.nlark.com/yuque/0/2024/png/43928099/1719648629759-2a48f174-1d30-4b9a-8f15-bf784f19820b.png#averageHue=%23f8d8d8&clientId=ueb21480b-fd9b-4&from=paste&height=208&id=u2afec4b2&originHeight=208&originWidth=1334&originalType=binary&ratio=1&rotation=0&showTitle=false&size=48529&status=done&style=none&taskId=u024538e9-d6dc-49b2-9018-23392cb6142&title=&width=1334\\",\\"https://cdn.nlark.com/yuque/0/2024/png/43928099/1719648761902-def890d3-37ab-43c0-8246-a2f9bceaa355.png#averageHue=%23f8d7d7&clientId=ueb21480b-fd9b-4&from=paste&height=208&id=u4a91e509&originHeight=208&originWidth=1322&originalType=binary&ratio=1&rotation=0&showTitle=false&size=53141&status=done&style=none&taskId=ucaf16f2b-2be9-4a81-9364-a5946858ce0&title=&width=1322\\",\\"https://cdn.nlark.com/yuque/0/2024/png/43928099/1719648789423-15813bc6-4952-45f5-9fbf-a318ef002bfa.png#averageHue=%23f7eeee&clientId=ueb21480b-fd9b-4&from=paste&height=629&id=u954919ec&originHeight=629&originWidth=1468&originalType=binary&ratio=1&rotation=0&showTitle=false&size=192263&status=done&style=none&taskId=u6dcbef30-f176-4f7d-a551-4e36d78be86&title=&width=1468\\",\\"https://cdn.nlark.com/yuque/0/2024/png/43928099/1719648811515-6abc7ba2-972a-4233-82ed-d19e798b22b0.png#averageHue=%23f7eeee&clientId=ueb21480b-fd9b-4&from=paste&height=550&id=u8e584576&originHeight=550&originWidth=1389&originalType=binary&ratio=1&rotation=0&showTitle=false&size=161651&status=done&style=none&taskId=ue088edf9-3b99-4bec-920b-996bf801400&title=&width=1389\\"],\\"dateModified\\":\\"2024-07-14T12:35:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"luke.lewis\\",\\"url\\":\\"https://github.com/d3Lap1ace\\",\\"email\\":\\"aegonk@163.com\\"}]}"]]},"headers":[{"level":2,"title":"消息中间件的主要的作用","slug":"消息中间件的主要的作用","link":"#消息中间件的主要的作用","children":[]},{"level":2,"title":"MQ的优缺点","slug":"mq的优缺点","link":"#mq的优缺点","children":[]},{"level":2,"title":"简单队列模型","slug":"简单队列模型","link":"#简单队列模型","children":[]},{"level":2,"title":"工作队列模型","slug":"工作队列模型","link":"#工作队列模型","children":[]},{"level":2,"title":"发布订阅模型","slug":"发布订阅模型","link":"#发布订阅模型","children":[{"level":3,"title":"Fanout","slug":"fanout","link":"#fanout","children":[]},{"level":3,"title":"Direct","slug":"direct","link":"#direct","children":[]},{"level":3,"title":"Topic","slug":"topic","link":"#topic","children":[]}]}],"git":{"createdTime":1720960541000,"updatedTime":1720960541000,"contributors":[{"name":"d3lap1ace L.Lewis","email":"ap1cem@163.com","commits":1}]},"readingTime":{"minutes":7,"words":2101},"filePathRelative":"backend/MOM.md","localizedDate":"2024年7月14日","autoDesc":true}');export{g as comp,c as data};
